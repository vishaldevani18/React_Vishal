{"version":3,"sources":["Components/Css/FormStyle.module.css","logo.svg","serviceWorker.js","Components/Register.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","DisplayFormData","props","FormData","data","formData","className","Card","border","style","width","Header","gender","class","aria-hidden","firstName","lastName","Body","Title","Text","email","password","Footer","department","Register","state","isCorrect","initialValues","confirmPassword","acceptTandC","validationSchema","Yup","shape","required","min","oneOf","onSubmit","setState","errors","touched","FormStyle","FormMainDiv","formInnerDiv","name","type","placeholder","component","value","for","as","htmlFor","React","Component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.25e83e0f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormMainDiv\":\"FormStyle_FormMainDiv__3tZKx\",\"formInnerDiv\":\"FormStyle_formInnerDiv__26HU3\"};","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Card from 'react-bootstrap/Card'\r\nimport FormStyle from './Css/FormStyle.module.css'\r\n\r\nfunction DisplayFormData(props) {\r\n\r\n    const FormData = props.data.formData;\r\n\r\n    return (\r\n\r\n        <div className=\"d-flex jusify-content-center\">\r\n            <div>\r\n                <Card border=\"primary\" style={{ width: '22rem' }}>\r\n                    <Card.Header className=\"d-flex justify-content-between\">\r\n                        <div>\r\n                            <p>\r\n                                {FormData.gender === 'male' ? <i class=\"fa fa-male \" aria-hidden=\"true\">  </i> : <i class=\"fa fa-female \" aria-hidden=\"true\">  </i>}\r\n                                <span className=\"m-2\">\r\n                                    {FormData.firstName} {FormData.lastName}\r\n                                </span>\r\n                            </p>\r\n                        </div>\r\n                        <div> <i className=\"fa fa-spinner fa-spin\"> </i></div>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Title>Login Information</Card.Title>\r\n                        <Card.Text>\r\n                            <div>\r\n                                <p> <b><i class=\"fa fa-user\" aria-hidden=\"true\"></i> Username : </b>{FormData.email}</p>\r\n                                <p><b><i class=\"fa fa-lock\"></i> Password : </b>{FormData.password}</p>\r\n                            </div>\r\n\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                        <small className=\"text-muted\"><b>Department : </b> {FormData.department}</small>\r\n                    </Card.Footer>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nclass Register extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            formData: '',\r\n            isCorrect: false\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <Formik\r\n\r\n                initialValues={{\r\n\r\n                    firstName: '',\r\n                    lastName: '',\r\n                    email: '',\r\n                    password: '',\r\n                    confirmPassword: '',\r\n                    acceptTandC: false,\r\n                    gender: 'male',\r\n                    department: \"hr\"\r\n\r\n                }}\r\n                validationSchema={\r\n\r\n                    Yup.object().shape({\r\n\r\n                        firstName: Yup.string().required(\"First Name Is Require\"),\r\n                        lastName: Yup.string().required(\"Last Name Is require\"),\r\n                        email: Yup.string().email(\"Email is Invalid\").required(\"Email is require\"),\r\n                        password: Yup.string().min(6, \"minimum password length must be 6 \").required(\"Password is required\"),\r\n                        confirmPassword: Yup.string().oneOf([Yup.ref('password')], 'Password Does Not Match').required(\"Confirm Password Require\"),\r\n                        acceptTandC: Yup.bool().oneOf([true], \"You must accept T&C\"),\r\n                        gender: Yup.string().required(\"Select Gender\")\r\n                    })\r\n                }\r\n\r\n                onSubmit={formData => { this.setState({ formData: formData, isCorrect: true }) }}\r\n            >\r\n                {\r\n                    ({ errors, touched }) => (\r\n\r\n                        <Form>\r\n                            <div className={FormStyle.FormMainDiv}>\r\n                                <div className={FormStyle.formInnerDiv} >\r\n                                    <div className=\"d-flex justify-content-center align-item-center mt-4\">\r\n                                        <p><b>Sign up</b></p>\r\n                                    </div>\r\n                                    <div>\r\n                                        <div className='input-group mb-3'>\r\n\r\n                                            <div className=\"input-group-prepend\">\r\n\r\n                                                <span className=\"input-group-text\"><i class=\"fa fa-user\" aria-hidden=\"true\"></i></span>\r\n                                            </div>\r\n                                            <Field name=\"firstName\" type=\"text\" className={\"form-control \" + (errors.firstName && touched.firstName ? 'is-invalid' : '')} placeholder=\"Firstname\" />\r\n                                            <ErrorMessage name=\"firstName\" component=\"div\" className=\"invalid-feedback\" />\r\n                                        </div>\r\n                                        <div className='input-group mb-3'>\r\n\r\n                                            <div className=\"input-group-prepend\">\r\n\r\n                                                <span className=\"input-group-text\"><i class=\"fa fa-user\" aria-hidden=\"true\"></i></span>\r\n                                            </div>\r\n                                            <Field name=\"lastName\" type=\"text\" className={\"form-control \" + (errors.lastName && touched.lastName ? 'is-invalid' : '')} placeholder=\"LastName\" />\r\n                                            <ErrorMessage name=\"lastName\" component=\"div\" className=\"invalid-feedback\" />\r\n                                        </div>\r\n                                        <div className='input-group mb-3'>\r\n                                            <div className=\"input-group-prepend\">\r\n\r\n                                                <span className=\"input-group-text\"><i class=\"fa fa-envelope\" aria-hidden=\"true\"></i></span>\r\n                                            </div>\r\n                                            <Field name=\"email\" type=\"text\" className={\"form-control \" + (errors.email && touched.email ? 'is-invalid' : '')} placeholder=\"Email\" />\r\n                                            <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\r\n                                        </div>\r\n                                        <div className='input-group mb-3'>\r\n                                            <div className=\"input-group-prepend\">\r\n\r\n                                                <span className=\"input-group-text\"><i class=\"fa fa-lock\"></i></span>\r\n                                            </div>\r\n                                            <Field name=\"password\" type=\"password\" className={\"form-control \" + (errors.password && touched.password ? 'is-invalid' : '')} placeholder=\"Password\" />\r\n                                            <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\r\n                                        </div>\r\n                                        <div className='input-group mb-3'>\r\n                                            <div className=\"input-group-prepend\">\r\n\r\n                                                <span className=\"input-group-text\"><i class=\"fa fa-lock\"></i></span>\r\n                                            </div>\r\n                                            <Field name=\"confirmPassword\" type=\"password\" className={\"form-control \" + (errors.confirmPassword && touched.confirmPassword ? 'is-invalid' : '')} placeholder=\"confirm Password\" />\r\n                                            <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"invalid-feedback\" />\r\n                                        </div>\r\n                                        {/* radio button  */}\r\n\r\n\r\n                                        <div className=\"form-group form-check\">\r\n\r\n\r\n                                            <div className=\"d-flex justify-content-between\">\r\n                                                <label>Gender</label>\r\n                                                <div className=\"pr-5\">\r\n                                                    <Field type=\"radio\" name=\"gender\" value=\"male\" className={'form-check-input' + (errors.gender ? 'is-invalid' : '')} />\r\n                                                    <label className=\"pr-4\">Male</label>\r\n                                                    <Field type=\"radio\" name=\"gender\" value=\"female\" className={'form-check-input' + (errors.gender ? 'is-invalid' : '')} />\r\n                                                    <label className=\"pr-3\">FeMale</label>\r\n                                                    <ErrorMessage name=\"gender\" component=\"div\" className=\"invalid-feedback\" />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        {/* Department */}\r\n                                        <div className=\"mt-2\">\r\n                                            <label for=\"department\">Department</label>\r\n                                            <Field name=\"department\" as=\"select\" class=\"custom-select\" >\r\n                                                <option value=\"hr\">HR</option>\r\n                                                <option value=\"development\">Development</option>\r\n                                                <option value=\"designing\">Designing</option>\r\n                                                <option value=\"testing\">Testing</option>\r\n                                            </Field>\r\n                                        </div>\r\n                                        {/* checkbox */}\r\n\r\n                                        <div className=\"form-group form-check mt-2\">\r\n                                            <Field type=\"checkbox\" name=\"acceptTandC\" className={'form-check-input ' + (errors.acceptTandC && touched.acceptTandC ? ' is-invalid' : '')} />\r\n                                            <label htmlFor=\"acceptTandC\" className=\"form-check-label\">Accept Terms & Conditions</label>\r\n                                            <ErrorMessage name=\"acceptTandC\" component=\"div\" className=\"invalid-feedback\" />\r\n                                        </div>\r\n                                        <div className=\"form-group d-flex justify-content-between\">\r\n                                            <input className=\" btn btn-primary\" type=\"submit\" value=\"submit\" />\r\n                                            <input className=\"btn btn-danger \" type=\"reset\" value=\"reset\" />\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    {\r\n                                        (this.state.isCorrect) && <DisplayFormData data={this.state} />\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n\r\n                        </Form>\r\n                    )\r\n                }\r\n\r\n            </Formik>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Register from './Components/Register'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nReactDOM.render(\r\n\r\n    <Register/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}