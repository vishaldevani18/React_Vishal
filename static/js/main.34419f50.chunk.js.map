{"version":3,"sources":["serviceWorker.js","Components/CounterApp.js","index.js","Components/Css/styles.module.css"],"names":["Boolean","window","location","hostname","match","MyFirstStyle","color","fontSize","padding","CounterApp","useState","count","setCount","alertmessage","setAlert","handleKeyDown","event","key","DecriesCount","CustomeAlert","Alert","variant","className","Style","mainDiv","countDiv","Calendar","animate","shadow","top","left","ring","right","page","title","days","buttonDiv","Button","onClick","onKeyUp","style","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"uNAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,iDCbAC,EAAc,CAChBC,MAAO,QACPC,SAAW,OACXC,QAAQ,cAgGGC,EA5FI,WAAO,IAAD,EAEKC,mBAAS,GAFd,mBAEdC,EAFc,KAEPC,EAFO,OAGUF,mBAAS,GAHnB,mBAGfG,EAHe,KAGFC,EAHE,KAKfC,EAAgB,SAACC,GACD,YAAdA,EAAMC,KAAmC,cAAdD,EAAMC,KACjCL,GAAS,SAAAD,GAAK,OAAGA,EAAM,KACvBG,GAAS,SAAAD,GAAY,OAAE,MAGP,eAAZG,EAAMC,KAAoC,cAAdD,EAAMC,KAEtCC,KAgBFA,EAAe,WAEbP,GAAS,EACXG,GAAS,SAAAD,GAAY,OAAI,KAMvBD,GAAS,SAAAD,GAAK,OAAIA,EAAQ,MAIlC,SAASQ,IAEL,OACI,kBAACC,EAAA,EAAD,CAAQC,QAAQ,UAAhB,8CAYR,OACI,yBAAKC,UAAWC,IAAMC,SAClB,6BAEI,yBAAKF,UAAWC,IAAME,UAClB,yBAAKH,UAAS,UAAKC,IAAMG,SAAX,YAAuBH,IAAMI,UACvC,yBAAKL,UAAWC,IAAMK,SACtB,yBAAKN,UAAWC,IAAMM,KAClB,yBAAKP,UAAS,UAAKC,IAAMO,KAAX,YAAmBP,IAAMQ,QACvC,yBAAKT,UAAS,UAAKC,IAAMS,MAAX,YAAoBT,IAAMQ,SAE5C,yBAAKT,UAAWC,IAAMU,MAClB,0BAAMX,UAAWC,IAAMW,OAAvB,WACA,0BAAMZ,UAAWC,IAAMY,MAAOxB,EAA9B,QAKZ,yBAAKW,UAAWC,IAAMa,WAClB,kBAACC,EAAA,EAAD,CAAShB,QAAQ,UAAUiB,QAAS,kBAzDhD1B,GAAS,SAAAD,GAAK,OAAEA,EAAM,UACtBG,GAAS,SAAAD,GAAY,OAAE,MAwD+C0B,QAASxB,GAAe,uBAAGO,UAAU,iBAAiBkB,MAAOnC,IAAvH,WACA,kBAACgC,EAAA,EAAD,CAAQhB,QAAQ,SAASiB,QAAS,kBAnD9C1B,GAAS,SAAAD,GAAK,OAAGA,EAAMA,UACvBG,GAAS,SAAAD,GAAY,OAAE,OAkDX,SACA,kBAACwB,EAAA,EAAD,CAAQhB,QAAQ,UAAUiB,QAAS,kBAAMpB,KAAgBqB,QAASxB,GAAe,uBAAGO,UAAU,mBAAmBkB,MAAOnC,IAAxH,YAEJ,6BAEe,GAAdQ,GAAqB,kBAACM,EAAD,U,MCnFtCsB,IAASC,OAEL,kBAAC,EAAD,MAAeC,SAASC,eAAe,SFsHrC,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,kBGxI5BC,EAAOC,QAAU,CAAC,UAAY,0BAA0B,QAAU,wBAAwB,QAAU,wBAAwB,MAAQ,sBAAsB,IAAM,oBAAoB,KAAO,qBAAqB,KAAO,qBAAqB,MAAQ,sBAAsB,KAAO,qBAAqB,MAAQ,sBAAsB,KAAO,wB","file":"static/js/main.34419f50.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { useState } from 'react';\r\nimport Style from './Css/styles.module.css'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\nconst MyFirstStyle ={\r\n    color: 'black',\r\n    fontSize : \"20px\",\r\n    padding:\"0 5px 0 0 \"\r\n   \r\n  }\r\n\r\nconst CounterApp = () => {\r\n\r\n    const [count, setCount] = useState(0);\r\n    const[alertmessage,setAlert] = useState(0);\r\n    // used to handle arrow key events\r\n    const handleKeyDown = (event) => {\r\n        if (event.key === 'ArrowUp' || event.key === 'ArrowLeft') {\r\n            setCount(count=> count+1);\r\n            setAlert(alertmessage=>0);\r\n        }\r\n\r\n        else if(event.key==='ArrowRight' || event.key === 'ArrowDown'){\r\n\r\n            DecriesCount();\r\n        }\r\n    }\r\n\r\n    const incriesCount = () => {\r\n\r\n        setCount(count=>count+1);\r\n        setAlert(alertmessage=>0);\r\n\r\n    }\r\n\r\n    const resetCount=()=>{\r\n\r\n        setCount(count=> count-count);\r\n        setAlert(alertmessage=>0);\r\n    }\r\n    const DecriesCount = () => {\r\n        \r\n        if (count <= 0) {\r\n          setAlert(alertmessage => 1);\r\n          \r\n           \r\n        }\r\n        else {\r\n\r\n            setCount(count => count - 1);\r\n\r\n        }\r\n    }\r\n    function CustomeAlert() {\r\n\r\n        return (\r\n            <Alert  variant='danger'>\r\n            \r\n            Invalid Actions found,Value Can't Decries.\r\n           \r\n          </Alert>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={Style.mainDiv}>\r\n            <div>\r\n                \r\n                <div className={Style.countDiv}>\r\n                    <div className={`${Style.Calendar} ${Style.animate}`}>\r\n                        <div className={Style.shadow}></div>\r\n                        <div className={Style.top}>\r\n                            <div className={`${Style.left} ${Style.ring}`}></div>\r\n                            <div className={`${Style.right} ${Style.ring}`}></div>\r\n                        </div>\r\n                        <div className={Style.page}>\r\n                            <span className={Style.title}>Counter</span>\r\n                            <span className={Style.days}>{count} </span>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className={Style.buttonDiv} >\r\n                    <Button  variant=\"primary\" onClick={() => incriesCount()} onKeyUp={handleKeyDown}><i className=\"fa fa-caret-up\" style={MyFirstStyle}></i>increse</Button>\r\n                    <Button variant=\"danger\" onClick={() => resetCount()}>Reset</Button>\r\n                    <Button variant=\"warning\" onClick={() => DecriesCount()} onKeyUp={handleKeyDown}><i className=\"fa fa-caret-down\" style={MyFirstStyle}></i>Decries</Button>\r\n                </div>\r\n                <div>\r\n                    {\r\n                (alertmessage==1) &&  <CustomeAlert/>\r\n            \r\n                }\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CounterApp;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport CounterApp from './Components/CounterApp';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\n\r\n\r\nReactDOM.render(\r\n\r\n    <CounterApp/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonDiv\":\"styles_buttonDiv__1bknm\",\"mainDiv\":\"styles_mainDiv__3z-pe\",\"animate\":\"styles_animate__aw6Pd\",\"scale\":\"styles_scale__3iCCP\",\"top\":\"styles_top__19sSb\",\"ring\":\"styles_ring__2X5-J\",\"left\":\"styles_left__3JYeG\",\"right\":\"styles_right__1MuJK\",\"page\":\"styles_page__26Gq9\",\"title\":\"styles_title__102ee\",\"days\":\"styles_days__jzJjv\"};"],"sourceRoot":""}