{"version":3,"sources":["Components/Css/Style.module.css","serviceWorker.js","Components/Home.js","Components/About.js","Components/Contact.js","Components/Footer.js","Components/Services.js","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Home","Component","About","Contact","Footer","className","Style","footer_div","href","WebsiteDevelopment","ApplicationDevelopment","useRouteMatch","path","url","to","DisplayQueryDetails","EcommerceDevelopment","querydata","query","URLSearchParams","useLocation","search","array","forEach","value","key","result","push","GetQueryDetails","console","log","map","data","Services","App","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","exact","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.63b3b7b9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer_div\":\"Style_footer_div__dZ2oQ\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n        <div>\r\n          <h2>You are Seeing Home Page</h2>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\n\r\nclass About extends Component {\r\n  render() {\r\n    return (\r\n        <div>\r\n          <h2>You are Seeing  About us Page</h2>\r\n        </div>\r\n    );\r\n  }\r\n}   \r\n\r\nexport default About;","import React, { Component } from 'react';\r\n\r\nclass Contact extends Component {\r\n  render() {\r\n    return (\r\n        <div>\r\n          <h2> You are Seeing Contact Us</h2>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;","import React from 'react'\r\nimport Style from './Css/Style.module.css';\r\nfunction Footer() {\r\n    return (\r\n        <div className={Style.footer_div}>\r\n\r\n            <p><a href=\"#\">vishal.devani@example.com</a></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Link, Switch, Route, useParams, useRouteMatch,useLocation } from 'react-router-dom';\r\nfunction WebsiteDevelopment(){\r\n\r\n    return(\r\n\r\n     <div>   \r\n    This Is Website Development.\r\n     </div>\r\n    )\r\n\r\n  }\r\n\r\n\r\nfunction ApplicationDevelopment(){\r\n\r\n  const { path, url } = useRouteMatch();\r\n  return (\r\n    <div>\r\n      <h1>Developers</h1>\r\n      <ul>\r\n        <li><Link to={`${url}/ios`}>Ios Deceloper</Link></li>\r\n        <li><Link to={`${url}/android`}>Android Developer</Link></li>\r\n      </ul>\r\n\r\n      <Switch>\r\n        {/* <Route path={`${path}/component-vs-props`}><ComponentVsProps/></Route>\r\n        <Route path={`${path}/state`}><State/></Route>\r\n        <Route path={`${path}/props`}><Props/></Route> */}\r\n        <Route path={`${path}/:topicID`}><DisplayQueryDetails/></Route>\r\n        <Route path={`${path}`}><b>Url Example</b>:http://localhost:3000/services/applicationdevelopment/ios?pagenumber=10&sorting=firstname</Route>\r\n      </Switch>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction EcommerceDevelopment(){\r\n\r\n    return(\r\n\r\n     <div>\r\n\r\n      This Is Ecommerce Development.\r\n     \r\n     </div>\r\n    )\r\n    \r\n}\r\n\r\n\r\nfunction GetQueryDetails(){\r\n\r\n  const query = new URLSearchParams(useLocation().search);\r\n  const QueryParams = query;\r\n  let array = [];\r\n  const html = QueryParams.forEach(function(value,key){\r\n \r\n   const result = {key:key,value:value};\r\n   array.push(result);\r\n  });\r\n return array;\r\n   //?pagenumber=10&sorting=firstname\r\n   \r\n   \r\n}\r\n\r\nfunction DisplayQueryDetails(){\r\ndebugger\r\n  var querydata = GetQueryDetails();\r\nconsole.log(querydata);\r\n  return (\r\n    <div>\r\n     <ul>{querydata.map(data => <li key={data}> <b> {data.key}</b> : {data.value}</li>)}</ul>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nfunction Services() {\r\n    const { path, url } = useRouteMatch();\r\n    return (\r\n        <div>\r\n         \r\n      <h1>Services We Provides</h1>\r\n      <ul>\r\n        <li><Link to={`${url}/applicationdevelopment`}>applicationdevelopment</Link></li>\r\n        <li><Link to={`${url}/websitedevelopment`}>websitedevelopment</Link></li>\r\n        <li><Link to={`${url}/ecommercedevelopment`}>ecommercedevelopment</Link></li>\r\n      </ul>\r\n\r\n      <Switch>\r\n        <Route path={`${path}/applicationdevelopment`}><ApplicationDevelopment/></Route>\r\n        <Route path={`${path}/websitedevelopment`}><WebsiteDevelopment/></Route>\r\n        <Route path={`${path}/ecommercedevelopment`}><EcommerceDevelopment/></Route>\r\n        <Route path={`${path}/:topicID`}>< DisplayQueryDetails/></Route>\r\n      </Switch>\r\n    </div>\r\n            \r\n       \r\n    )\r\n}\r\n\r\nexport default Services\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport Home from './Components/Home';\r\nimport About from './Components/About';\r\nimport Contact from './Components/Contact';\r\nimport Footer from './Components/Footer'\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Services from './Components/Services'\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <h2>Welcome to day-12  React Router Tutorial</h2>\r\n            <Navbar bg=\"light\" expand=\"lg\">\r\n              <Navbar.Brand href=\"#home\">React-Routers</Navbar.Brand>\r\n              <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n              <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                  <ul className=\"navbar-nav mr-4 \">\r\n                    <li><Link to={'/'} className=\"nav-link pr-4\"> Home </Link></li>\r\n                    <li><Link to={'/contact'} className=\"nav-link pr-4\">Contact</Link></li>\r\n                    <li><Link to={'/about'} className=\"nav-link pr-4\">About</Link></li>\r\n                    <li><Link to={'/services'} className=\"nav-link pr-4\">services</Link></li>\r\n                    \r\n                  </ul>\r\n                </Nav>\r\n              </Navbar.Collapse>\r\n            </Navbar>\r\n\r\n        \r\n          <Switch>\r\n            <Route exact path='/' component={Home} />\r\n            <Route path='/contact' component={Contact} />\r\n            <Route path='/about' component={About} />\r\n            <Route path='/services' component={Services} />  \r\n          </Switch>\r\n        </div>\r\n        <div>\r\n          <Footer />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React  from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\nReactDOM.render(\r\n  <App/>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}